services:
  nautobot:
    image: ${REPO_NAME}/${PROJECT}/nautobot:latest
    env_file:
      - "local.env"
      - "creds.env"
    tty: true
    depends_on:
      - "redis"
    ports:
      - "8080:8080"
    restart: "always"
    volumes:
      - ./nautobot_config.py:/opt/nautobot/nautobot_config.py:rw
      - nautobot_media_files:/opt/nautobot/media:rw
    #   - "./nautobot.key:/opt/nautobot/nautobot.key:ro"
    #   - "./nautobot.crt:/opt/nautobot/nautobot.crt:ro"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    networks:
      net_frontend:
        ipv4_address: 172.16.238.41
    
  celery_worker:
    image: ${REPO_NAME}/${PROJECT}/nautobot:latest
    env_file:
      - "local.env"
      - "creds.env"
    tty: true
    entrypoint:
      - "sh"
      - "-c"  # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
      - "nautobot-server celery worker -l $$NAUTOBOT_LOG_LEVEL --events"  ## $$ because of docker-compose
    depends_on:
      - "nautobot"
    healthcheck:
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: 3
      test:
        [
          "CMD",
          "bash",
          "-c",
          "nautobot-server celery inspect ping --destination celery@$$HOSTNAME"  ## $$ because of docker-compose
        ]
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    networks:
      net_backend:
        ipv4_address: 172.16.239.41
    
  celery_beat:
    image: ${REPO_NAME}/${PROJECT}/nautobot:latest
    env_file:
      - "local.env"
      - "creds.env"
    tty: true
    entrypoint:
      - "sh"
      - "-c"  # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
      - "nautobot-server celery beat -l $$NAUTOBOT_LOG_LEVEL"  ## $$ because of docker-compose
    depends_on:
      - "nautobot"
    healthcheck:
      disable: true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    networks:
      net_backend:
        ipv4_address: 172.16.239.42
    
  redis:
    image: ${REPO_NAME}/${PROJECT}/redis:7-alpine
    command:
      - "sh"
      - "-c"  # this is to evaluate the $NAUTOBOT_REDIS_PASSWORD from the env
      - "redis-server --appendonly yes --requirepass $$NAUTOBOT_REDIS_PASSWORD"  ## $$ because of docker-compose
    restart: "unless-stopped"
    env_file:
      - "local.env"
      - "creds.env"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    networks:
      net_backend:
        ipv4_address: 172.16.239.43


volumes:
  nautobot_media_data:
  nautobot_media_files:

networks:
  net_frontend:
    external: true
  net_backend:
    external: true