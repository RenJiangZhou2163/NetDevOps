global:
  # 超时时间
  resolve_timeout: 99y
  smtp_from: "networkAlarm@xfusion.com"
  smtp_smarthost: "email.xfusion.com:25"
  smtp_auth_username: "networkAlarm"
  smtp_auth_password: "abcd@##*17"
  smtp_require_tls: false

route:
  # 分组规则，如果满足group_by中包含的标签，则这些报警会合并为一个通知发给receiver
  group_by: ["eventId"]
  # 设置等待时间，在此等待时间内如果接收到多个报警，则会合并成一个通知发送给receiver
  group_wait: 30s
  # 两次报警通知的时间间隔，如：5m，表示发送报警通知后，如果5分钟内再次接收到报警则不会发送通知
  group_interval: 5m
  # 发送相同告警的时间间隔，如：4h，表示4小时内不会发送相同的报警
  repeat_interval: 1h
  # 顶级路由配置的接收者（匹配不到子级路由，会使用根路由发送报警）
  receiver: "web.hook"

  routes: # 子路由的接收者
    - receiver: "graylog"
      group_wait: 10s
      continue: true
      matchers:
        - source="xNet-Monitor"

    - receiver: "网络组"
      group_wait: 10s
      continue: true
      matchers:
        - source="xNet-Monitor"

receivers:
  - name: "网络组"
    email_configs:
      - to: "renjiangzhou@xfusion.com" # 'renjiangzhou@xfusion.com,yangruichao@xfusion.com'
        send_resolved: true
        headers: { Subject: "[WARN] 报警邮件test" }

  - name: "graylog"
    webhook_configs:
      - send_resolved: true
        url: "http://127.0.0.1:5001"

  - name: "web.hook"
    webhook_configs:
      - send_resolved: true
        url: "http://127.0.0.1:5001"

inhibit_rules:
  - source_match:
      severity: "critical"
    target_match:
      severity: "warning"
    equal: ["alertname", "dev", "instance"]

# Files from which custom notification template definitions are read.
# The last component may use a wildcard matcher, e.g. 'templates/*.tmpl'.
templates:
  - "/etc/alertmanager/templates/*.tmpl"
